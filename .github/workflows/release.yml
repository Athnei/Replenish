name: Java CI with Gradle

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build --stacktrace --parallel

      - name: Capture build artifacts
        id: upload
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: |
            build/libs/
            !build/libs/*-dev.jar
            !build/libs/*-sources.jar

  release:
    name: Release Project
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        id: download
        uses: actions/download-artifact@v2
        with:
          name: Artifacts

      - name: View content
        run: ls -R

      - name: Set file as var
        run: file=$(echo *.jar); echo "file_name=${file}" >> $GITHUB_ENV

      - name: Use the value
        run: echo "${{ env.file_name }}" # This will output 'yellow'  

      # - name: Create release
      #   id: create-release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.run_number }}
      #     release_name: Release

      # - name: Upload release
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create-release.outputs.upload_url }}
      #     asset_path: ./
      #     asset_name: replenish.jar
      #     asset_content_type: application/java-archive
